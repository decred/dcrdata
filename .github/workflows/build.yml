name: Build and Test
on: [push, pull_request]
permissions:
  contents: read

jobs:
  build-go:
    name: Go Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['1.19', '1.20']
    steps:
    - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab #v3.5.2

    - name: Set up Go
      uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 #v4.0.1
      with:
        go-version: ${{ matrix.go }}
        check-latest: true

    - name: Go Build dcrdata
      run: go build -v ./...
      working-directory: ./cmd/dcrdata

    - name: Install Linters
      run: "curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.53.2"

    - name: Go Tests
      run: |
        ./run_tests.sh

  build-js:
    name: Build JS
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab #v3.5.2

      - name: Use nodejs ${{ matrix.node-version }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c #v3.6.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: npm clean-install
        run: npm clean-install
        working-directory: ./cmd/dcrdata

      - name: npm run build
        run: |
          npm run build
          git diff --exit-code views/extras.tmpl
        working-directory: ./cmd/dcrdata
