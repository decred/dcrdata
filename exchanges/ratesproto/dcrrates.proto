syntax = "proto3";

package dcrrates;

option go_package = ".";

// DCRRates takes a subscription from a client and pushes data as its received
// from external sources.
service DCRRates {
  rpc SubscribeExchanges (ExchangeSubscription) returns (stream ExchangeRateUpdate);
}

message ExchangeSubscription {
  string index = 1;
  repeated string exchanges = 2;
}

message ExchangeRateUpdate {
  string token = 1;
  double price = 2;
  double baseVolume = 3;
  double volume = 4;
  double change = 5;
  int64 stamp = 6;
  map<string, double> indices = 7;
  message DepthPoint {
    double quantity = 1;
    double price = 2;
  }
  message DepthData {
    int64 time = 1;
    repeated DepthPoint bids = 2;
    repeated DepthPoint asks = 3;
  }
  DepthData depth = 8;
  message Candlestick {
    double high = 1;
    double low = 2;
    double open = 3;
    double close = 4;
    double volume = 5;
    int64 start = 6;
  }
  message Candlesticks {
    string bin = 1;
    repeated Candlestick sticks = 2;
  }
  repeated Candlesticks candlesticks = 9;
  string currencyPair = 10;
}
